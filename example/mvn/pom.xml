<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.fiberhome.omc.vapp</groupId>
    <artifactId>vapp-common</artifactId>
    <version>trunk-SNAPSHOT</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <cusa.framework.version>0.10.0-SNAPSHOT</cusa.framework.version>
        <unm.api.version>trunk-SNAPSHOT</unm.api.version>

        <log4j2.version>2.7</log4j2.version>
        <com.lmax.disruptor>3.3.2</com.lmax.disruptor>

        <junit.version>4.13.1</junit.version>
        <jmockit.version>1.33</jmockit.version>
        <spring.version>5.0.5.RELEASE</spring.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>3.3</version>
        </dependency>

        <dependency>
            <groupId>com.fiberhome.cusa</groupId>
            <artifactId>cusa-cache-api</artifactId>
            <version>${cusa.framework.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.cusa</groupId>
            <artifactId>cusa-cache-ignite</artifactId>
            <version>${cusa.framework.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.cusa</groupId>
            <artifactId>cusa-common</artifactId>
            <version>${cusa.framework.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.cusa</groupId>
            <artifactId>cusa-container-jetty</artifactId>
            <version>${cusa.framework.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.cusa</groupId>
            <artifactId>cusa-container-spring</artifactId>
            <version>${cusa.framework.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.cusa</groupId>
            <artifactId>cusa-container-springweb</artifactId>
            <version>${cusa.framework.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.cusa</groupId>
            <artifactId>cusa-mq-activemq</artifactId>
            <version>${cusa.framework.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.cusa</groupId>
            <artifactId>cusa-orm-mongo</artifactId>
            <version>${cusa.framework.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.cusa</groupId>
            <artifactId>cusa-orm-mybatis</artifactId>
            <version>${cusa.framework.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.cusa</groupId>
            <artifactId>cusa-report-birt</artifactId>
            <version>${cusa.framework.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.cusa</groupId>
            <artifactId>cusa-rpc-dubbo</artifactId>
            <version>${cusa.framework.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.cusa</groupId>
            <artifactId>cusa-scheduler</artifactId>
            <version>${cusa.framework.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.cusa</groupId>
            <artifactId>cusa-security-shiro</artifactId>
            <version>${cusa.framework.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.cusa</groupId>
            <artifactId>cusa-zookeeper</artifactId>
            <version>${cusa.framework.version}</version>
        </dependency>

        <!-- unm - api -->
        <dependency>
            <groupId>com.fiberhome.omc.vapp</groupId>
            <artifactId>unm-api-alarm</artifactId>
            <version>${unm.api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.omc.vapp</groupId>
            <artifactId>unm-api-base</artifactId>
            <version>${unm.api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.omc.vapp</groupId>
            <artifactId>unm-api-icm</artifactId>
            <version>${unm.api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.omc.vapp</groupId>
            <artifactId>unm-api-intf</artifactId>
            <version>${unm.api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.omc.vapp</groupId>
            <artifactId>unm-api-mbmp</artifactId>
            <version>${unm.api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.omc.vapp</groupId>
            <artifactId>unm-api-ne</artifactId>
            <version>${unm.api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.omc.vapp</groupId>
            <artifactId>unm-api-pas</artifactId>
            <version>${unm.api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.omc.vapp</groupId>
            <artifactId>unm-api-topo</artifactId>
            <version>${unm.api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.omc.vapp</groupId>
            <artifactId>unm-api-port</artifactId>
            <version>${unm.api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.omc.vapp</groupId>
            <artifactId>unm-api-task</artifactId>
            <version>${unm.api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.omc.vapp</groupId>
            <artifactId>unm-api-pm</artifactId>
            <version>${unm.api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fiberhome.omc.vapp</groupId>
            <artifactId>unm-api-report</artifactId>
            <version>${unm.api.version}</version>
        </dependency>
        <!--log4j2 -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-nosql</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-web</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        <!--log4j2异步-->
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>${com.lmax.disruptor}</version>
        </dependency>


        <!--test framework-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jmockit</groupId>
            <artifactId>jmockit</artifactId>
            <version>${jmockit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <compilerArguments>
                        <bootclasspath>${java.home}/lib/rt.jar</bootclasspath>
                    </compilerArguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.8</version>
                <configuration>
                    <destFile>${project.build.directory}/coverage-report/jacoco.exec</destFile>
                    <dataFile>${project.build.directory}/coverage-report/jacoco.exec</dataFile>
                </configuration>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/coverage-report/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


    <distributionManagement>
        <repository>
            <id>maven_local_releases</id>
            <name>Internal Releases</name>
            <url>
                http://10.170.3.50:8040/artifactory/maven_local_releases
            </url>
        </repository>
        <snapshotRepository>
            <id>maven_local_snapshots</id>
            <url>http://10.170.3.50:8040/artifactory/maven_local_snapshots</url>
        </snapshotRepository>
    </distributionManagement>
</project>